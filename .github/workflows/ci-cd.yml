name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    # 테스트용 환경 변수
    env:
      EUREKA_USERNAME: ${{ secrets.EUREKA_USERNAME }}
      EUREKA_PASSWORD: ${{ secrets.EUREKA_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Clean with Maven
        run: mvn clean

      - name: Load .env and Install with Maven
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          export $(grep -v '^#' .env | xargs)
          mvn install
        shell: bash

      # DockerHub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # DockerHub Push
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eventor-gateway .  # 원하는 이름으로 로컬에서 태깅
          docker push ${{ secrets.DOCKER_USERNAME }}/eventor-gateway 

  server:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Write .env file to temporary file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Send .env to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: ".env"
          target: "/home/eventor"

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd eventor-gateway
            sudo docker-compose stop eventor-gateway
            sudo docker-compose rm -f
            sudo docker rmi dlrudgjs104/eventor-gateway:latest
            sudo docker-compose up -d